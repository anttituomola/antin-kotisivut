---
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";

// Enable static pre-rendering
export const prerender = true;

export async function getStaticPaths() {
  const posts = await getCollection("blog", ({ data }) => {
    return import.meta.env.PROD ? !data.draft : true;
  });

  // Log all available posts and their slugs
  console.log(
    "Available posts:",
    posts.map((p) => ({
      slug: p.slug,
      title: p.data.title,
    }))
  );

  const paths = posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));

  console.log(
    "Generated paths:",
    paths.map((p) => ({
      slug: p.params.slug,
      hasPost: !!p.props.post,
    }))
  );

  return paths;
}

const { post } = Astro.props;
console.log("Current post:", post?.slug);

// Ensure post exists before rendering
if (!post) {
  console.error("No post found for slug:", Astro.params.slug);
  return Astro.redirect("/blog");
}

let Content;
try {
  const rendered = await post.render();
  Content = rendered.Content;
} catch (error) {
  console.error("Error rendering post:", error);
  return Astro.redirect("/blog");
}
---

<Layout title={post.data.title}>
  <article class="max-w-3xl mx-auto">
    {
      post.data.image && (
        <img
          src={post.data.image}
          alt={post.data.title}
          class="w-full aspect-video object-cover rounded-lg mb-8"
        />
      )
    }
    <h1 class="text-4xl font-bold text-text-primary mb-4">{post.data.title}</h1>
    <div class="flex gap-4 text-text-secondary mb-8">
      <time datetime={post.data.pubDate.toISOString()}>
        {new Date(post.data.pubDate).toLocaleDateString()}
      </time>
      <span>Â·</span>
      <span>{post.data.author}</span>
    </div>
    <div class="prose prose-lg mx-auto prose-a:target-[_blank]">
      <Content />
    </div>
    <div class="mt-8 flex gap-2 max-w-prose mx-auto flex-wrap">
      {
        post.data.tags.map((tag) => (
          <span class="bg-accent bg-opacity-20 text-text-primary px-3 py-1 rounded-full text-sm">
            {tag}
          </span>
        ))
      }
    </div>
  </article>

  <script>
    // Add target="_blank" to all links in the prose content
    document.querySelectorAll(".prose a").forEach((link) => {
      link.setAttribute("target", "_blank");
      // Also add rel="noopener noreferrer" for security
      link.setAttribute("rel", "noopener noreferrer");
    });
  </script>
</Layout>
